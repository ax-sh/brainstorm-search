{"version":3,"sources":["components/search-input.js","queries.js","App.jsx","index.jsx"],"names":["Input","styled","input","Span","span","Div","div","Button","button","googleSearch","query","url","Object","assign","document","createElement","target","href","click","SearchInput","sentence","value","onChange","split","first","last","queryRef","useRef","onClick","current","replace","trim","ref","type","onKeyDown","key","sentences","map","i","filter","length","App","useState","localStorage","getItem","setQuery","setItem","len","style","width","className","n","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"66BAGA,IAAMA,EAAQC,IAAOC,MAAV,KAYLC,EAAOF,IAAOG,KAAV,KAEJC,EAAMJ,IAAOK,IAAV,KAEHC,EAASN,IAAOO,OAAV,KAmBNC,EAAe,SAACC,GATD,IAACC,IAUR,sCAAwCD,EAPrDE,OAAOC,OAAOC,SAASC,cAAc,KAAM,CAC1CC,OAAQ,SACRC,KAAMN,IACJO,SAiCWC,EA1BK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAChCF,EAASG,MAAM,MADiB,mBAC/CC,EAD+C,KACxCC,EADwC,KAEhDC,EAAWC,mBACXC,EAAU,WACf,IAAIlB,EAAQgB,EAASG,QAAQR,MAE7BX,EAAQU,EAASU,QAAQ,KAAMpB,EAAMqB,QACrCtB,EAAaC,IAEd,OACC,kBAACL,EAAD,KACC,kBAACF,EAAD,KAAOqB,GACP,kBAACxB,EAAD,CACCgC,IAAKN,EACLO,KAAK,SACLZ,MAAOA,EACPC,SAAUA,EACVY,UAAW,YACF,UADe,EAAVC,KACMP,OAGrB,kBAACzB,EAAD,KAAOsB,GACP,kBAAClB,EAAD,CAAQqB,QAASA,GAAjB,QCzCYQ,G,MArBN,uLAgBNb,MAAM,MACNc,KAAI,SAACC,GAAD,OAAOA,EAAEP,UACbQ,QAAO,SAACD,GAAD,OAAOA,GAAkB,IAAbA,EAAEE,WCaTC,EA5BH,WAAO,IAAD,EACUC,mBAASC,aAAaC,QAAQ,UADxC,mBACTlC,EADS,KACFmC,EADE,KAGVvB,EAAW,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OAClB2B,aAAaG,QAAQ,QAAS9B,EAAOK,OACrCwB,EAAS7B,EAAOK,OAChB,IAAM0B,EAAMrC,EAAM8B,OAAS,EAC3BxB,EAAOgC,MAAMC,MAAQF,EAAMA,EAAM,KAAO,WAE1C,OACE,8BACE,yBAAKG,UAAU,OAIZd,EAAUC,KAAI,SAACC,EAAGa,GAAJ,OACb,kBAAC,EAAD,CACEC,MAAOD,EACP/B,SAAUkB,EACVjB,MAAOX,EACPY,SAAUA,U,MCpBtB+B,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDzC,SAAS0C,eAAe,W","file":"static/js/main.784514ea.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n\t//   font-size: 1em;\r\n\tmargin: 1em;\r\n\tpadding: 0.25em 1em;\r\n\tborder-radius: 3px;\r\n\tborder-color: #222;\r\n\tbackground-color: #222;\r\n\tcolor: #eee;\r\n\t// color: #1aaa3f;\r\n\tborder-width: 1px;\r\n\t//   background-color: #bcc5c9;\r\n`;\r\nconst Span = styled.span``;\r\n\r\nconst Div = styled.div``;\r\n\r\nconst Button = styled.button`\r\n\tbackground-color: #202020;\r\n\t//   font-size: 1em;\r\n\tborder-color: #222;\r\n\tborder-width: 1px;\r\n\tmargin: 1em;\r\n\tpadding: 0.25em 1em;\r\n\tborder-radius: 3px;\r\n`;\r\n\r\nconst openInNewTab = (url) => {\r\n\t//   let win = window.open(url, '_blank');\r\n\t//   win.focus();\r\n\tObject.assign(document.createElement(\"a\"), {\r\n\t\ttarget: \"_blank\",\r\n\t\thref: url,\r\n\t}).click();\r\n};\r\n\r\nconst googleSearch = (query) => {\r\n\topenInNewTab(\"https://www.google.com.np/search?q=\" + query);\r\n};\r\n\r\nconst SearchInput = ({ sentence, value, onChange }) => {\r\n\tconst [first, last] = sentence.split(\"{}\");\r\n\tconst queryRef = useRef();\r\n\tconst onClick = () => {\r\n\t\tlet query = queryRef.current.value;\r\n\r\n\t\tquery = sentence.replace(\"{}\", query.trim());\r\n\t\tgoogleSearch(query);\r\n\t};\r\n\treturn (\r\n\t\t<Div>\r\n\t\t\t<Span>{first}</Span>\r\n\t\t\t<Input\r\n\t\t\t\tref={queryRef}\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonKeyDown={({ key }) => {\r\n\t\t\t\t\tkey === \"Enter\" && onClick();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Span>{last}</Span>\r\n\t\t\t<Button onClick={onClick}>Go</Button>\r\n\t\t</Div>\r\n\t);\r\n};\r\nexport default SearchInput;\r\n","// who what when where why how\r\n\r\nconst txt = `\r\n\r\ndefine {}\r\n{} meaning\r\nwhat is {}\r\npros and cons of {}\r\nwhy does {} work\r\n{} alternatives\r\nhow to use {}\r\nwhen to use {}\r\nwhy use {}\r\n{} synonym\r\nwho is {}\r\n\r\nhow does {} work?`;\r\nconst lines = txt\r\n  .split('\\n')\r\n  .map((i) => i.trim())\r\n  .filter((i) => i && i.length !== 0);\r\n\r\nconst sentences = lines;\r\nexport default sentences;\r\n","import React, { useState } from 'react';\r\nimport SearchInput from './components/search-input';\r\nimport './App.css';\r\nimport sentences from './queries';\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState(localStorage.getItem('query'));\r\n\r\n  const onChange = ({ target }) => {\r\n    localStorage.setItem('query', target.value);\r\n    setQuery(target.value);\r\n    const len = query.length + 6;\r\n    target.style.width = len ? len + 'ch' : 'inherit';\r\n  };\r\n  return (\r\n    <main>\r\n      <div className=\"App\">\r\n        {/* TODO make a nav for google search config  */}\r\n        {/* <nav>Settings</nav> */}\r\n\r\n        {sentences.map((i, n) => (\r\n          <SearchInput\r\n            index={n}\r\n            sentence={i}\r\n            value={query}\r\n            onChange={onChange}\r\n          />\r\n        ))}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}